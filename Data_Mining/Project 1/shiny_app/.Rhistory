shiny::runApp()
require(shiny)
source("simulation_function.R")
View(sim.logistic)
input<-list()
input$n<-100
input$beta.0<--3
input$beta.1<-2
input$beta.2<-3
input$beta.2<-3
input<-list()
input$n<-100
input$beta.0<--3
input$beta.1<-2
input$beta.2<-3
input$prior<-0.5
sim<-sim.logistic(n=input$n,n.cov=2,beta=c(input$beta.0,input$beta.1,input$beta.2))
library(mvtnorm)
sim<-sim.logistic(n=input$n,n.cov=2,beta=c(input$beta.0,input$beta.1,input$beta.2))
library(MASS)
sim<-sim.logistic(n=input$n,n.cov=2,beta=c(input$beta.0,input$beta.1,input$beta.2))
head(sim)
summary(sim$y)
summary(factor(sim$y))
input$beta.0<--10
input$beta.2<-10
input$beta.0<--3
input$beta.1<-2
input$beta.2<-10
sim<-sim.logistic(n=input$n,n.cov=2,beta=c(input$beta.0,input$beta.1,input$beta.2))
summary(factor(sim$y))
input$beta.1<-20
sim<-sim.logistic(n=input$n,n.cov=2,beta=c(input$beta.0,input$beta.1,input$beta.2))
summary(factor(sim$y))
input$beta.0<--1
input$beta.1<-20
input$beta.2<-10
sim<-sim.logistic(n=input$n,n.cov=2,beta=c(input$beta.0,input$beta.1,input$beta.2))
summary(factor(sim$y))
input$n<-1000
sim<-sim.logistic(n=input$n,n.cov=2,beta=c(input$beta.0,input$beta.1,input$beta.2))
summary(factor(sim$y))
source("lda.function.R")
source("QDA.R")
source("logit.R")
source("simulation_function.R")
lda.model <- my.lda(response = sim[,1],formula = "~.",data = data.frame(sim[,-1]))
lda.pred <- predict.my.lda(x = sim[,-1],model = lda.model,prior = c(input$prior,1-input$prior))
lda.pred
qda.pred<-rep(NA_integer_,nrow(sim))
for(k in 1:nrow(sim)){
qda.pred[k]<-QDA.1(sim,as.matrix(sim[k,-1]))
}
qda.pred
logit.bs <- logit.m(X =cbind(1,sim[,-1]), y = sim[,1])
logit.pred <- predict.logit.cl(logit.bs, X = cbind(1, sim[,-1]))
logit.pred <- predict.logit.cl(logit.bs, X = as.matrix(cbind(1, sim[,-1])))
logit.pred
debug(logit.pred)
debug(predict.logit.cl)
predict.logit.cl(logit.bs, X = as.matrix(cbind(1, sim[,-1])))
predict.logit(betas, X)
logit.pred <- as.numeric(predict.logit.cl(logit.bs, X = as.matrix(cbind(1, sim[,-1]))))
undebug(predict.logit.cl)
library(ggplot2)
df<-data.frame(sim,lda.pred,qda.pred,logit.pred)
head(df)
logit.pred <- as.numeric(predict.logit.cl(logit.bs, X = as.matrix(cbind(1, sim[,-1]))))
##miss.class[i,3] <- mscls.rt(sim[,1], logit.pred)
df<-data.frame(sim,lda.pred,qda.pred,logit.pred)
head(df)
p<-ggplot(data=df)
p+geom_point(mapping=aes(x=X2,y=X1,colour=y,shape=Class,size=qda.pred,alpha=logit.pred))
p+geom_point(mapping=aes(x=X2,y=X1,colour=y,shape=factor(Class),size=qda.pred,alpha=logit.pred))
p+geom_point(mapping=aes(x=X2,y=X1,colour=factor(y),shape=factor(Class),size=factor(qda.pred),alpha=factor(logit.pred)))
p+geom_point(mapping=aes(x=X2,y=X1,colour=factor(y),shape=factor(Class),size=qda.pred+0.5,alpha=factor(logit.pred)))
p+geom_point(mapping=aes(x=X2,y=X1,colour=factor(y),shape=factor(Class),size=qda.pred+0.5,alpha=logit.pred+0.5))
p+geom_point(mapping=aes(x=X2,y=X1,colour=factor(y),shape=factor(Class),size=qda.pred,alpha=logit.pred+0.5))+scale_size(range = c(4,5))
p+geom_point(mapping=aes(x=X2,y=X1,colour=factor(y),shape=factor(Class),size=qda.pred,alpha=logit.pred+0.5))+scale_size(range = c(4,7))
p+geom_point(mapping=aes(x=X2,y=X1,colour=factor(y),shape=factor(Class),size=factor(qda.pred),alpha=factor(logit.pred)))+scale_size(range = c(4,7))
p+geom_point(mapping=aes(x=X2,y=X1,colour=factor(y),shape=factor(Class),size=factor(qda.pred),alpha=logit.pred))+scale_size(range = c(4,7))+scale_alpha(range = c(0.7,1))
p+geom_point(mapping=aes(x=X2,y=X1,colour=factor(y),shape=factor(Class)),size=factor(qda.pred),alpha=logit.pred))+scale_size(range = c(4,7))+scale_alpha(range = c(0.7,1))
p+geom_point(mapping=aes(x=X2,y=X1,colour=factor(y),shape=factor(Class),size=qda.pred,alpha=logit.pred))+scale_size(range = c(4,7))+scale_alpha(range = c(0.7,1))
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
print(p+geom_point(mapping=aes(x=X2,y=X1,colour=factor(logit.pred),shape=factor(Class),size=factor(qda.pred)))+scale_size_discrete(range = c(4,7))+facet_wrap(~y,nrow = 2))
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
source("untitled folder/untitled folder/QDA.R")
source("untitled folder/untitled folder/QDA.R")
mscls.rt <- function(true.cl, pred.cl){
sum((true.cl!=pred.cl))/length(true.cl)
}
